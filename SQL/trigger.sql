DROP TABLE GS_AUDITORIA_TRANSACOES CASCADE CONSTRAINTS;

DROP SEQUENCE GS_AUDITORIA_TRANSACOES_SEQ;

CREATE SEQUENCE GS_AUDITORIA_TRANSACOES_SEQ START WITH 1 INCREMENT BY 1;

/* ------------------------------- CREATE TABLE ------------------------------ */

CREATE TABLE GS_AUDITORIA_TRANSACOES (
    ID NUMBER DEFAULT GS_AUDITORIA_TRANSACOES_SEQ.NEXTVAL PRIMARY KEY,
    TABELA VARCHAR2(100),
    OPERACAO VARCHAR2(10),
    DATA_TRANSACAO TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DADOS_ANTES CLOB,
    DADOS_DEPOIS CLOB
);

/* ----------------------------- CREATE TRIGGERS ---------------------------- */

CREATE OR REPLACE TRIGGER AUDIT_GS_USUARIO
AFTER INSERT OR UPDATE OR DELETE ON GS_USUARIO
FOR EACH ROW
DECLARE
    v_operacao VARCHAR2(10);
    v_dados_antes CLOB;
    v_dados_depois CLOB;
BEGIN
    IF INSERTING THEN
        v_operacao := 'INSERT';
        v_dados_depois := JSON_OBJECT('USUARIO_ID' VALUE :NEW.USUARIO_ID, 'NOME' VALUE :NEW.NOME, 
                                      'EMAIL' VALUE :NEW.EMAIL, 'SENHA' VALUE :NEW.SENHA, 
                                      'IMG_PERFIL' VALUE :NEW.IMG_PERFIL, 'DATA_CRIACAO' VALUE :NEW.DATA_CRIACAO, 
                                      'ULTIMA_LOCALIZACAO' VALUE :NEW.ULTIMA_LOCALIZACAO);
    ELSIF UPDATING THEN
        v_operacao := 'UPDATE';
        v_dados_antes := JSON_OBJECT('USUARIO_ID' VALUE :OLD.USUARIO_ID, 'NOME' VALUE :OLD.NOME, 
                                     'EMAIL' VALUE :OLD.EMAIL, 'SENHA' VALUE :OLD.SENHA, 
                                     'IMG_PERFIL' VALUE :OLD.IMG_PERFIL, 'DATA_CRIACAO' VALUE :OLD.DATA_CRIACAO, 
                                     'ULTIMA_LOCALIZACAO' VALUE :OLD.ULTIMA_LOCALIZACAO);
        v_dados_depois := JSON_OBJECT('USUARIO_ID' VALUE :NEW.USUARIO_ID, 'NOME' VALUE :NEW.NOME, 
                                      'EMAIL' VALUE :NEW.EMAIL, 'SENHA' VALUE :NEW.SENHA, 
                                      'IMG_PERFIL' VALUE :NEW.IMG_PERFIL, 'DATA_CRIACAO' VALUE :NEW.DATA_CRIACAO, 
                                      'ULTIMA_LOCALIZACAO' VALUE :NEW.ULTIMA_LOCALIZACAO);
    ELSIF DELETING THEN
        v_operacao := 'DELETE';
        v_dados_antes := JSON_OBJECT('USUARIO_ID' VALUE :OLD.USUARIO_ID, 'NOME' VALUE :OLD.NOME, 
                                     'EMAIL' VALUE :OLD.EMAIL, 'SENHA' VALUE :OLD.SENHA, 
                                     'IMG_PERFIL' VALUE :OLD.IMG_PERFIL, 'DATA_CRIACAO' VALUE :OLD.DATA_CRIACAO, 
                                     'ULTIMA_LOCALIZACAO' VALUE :OLD.ULTIMA_LOCALIZACAO);
    END IF;

    INSERT INTO GS_AUDITORIA_TRANSACOES (ID, TABELA, OPERACAO, DADOS_ANTES, DADOS_DEPOIS)
    VALUES (GS_AUDITORIA_TRANSACOES_SEQ.NEXTVAL, 'GS_USUARIO', v_operacao, v_dados_antes, v_dados_depois);
END;
/

CREATE OR REPLACE TRIGGER AUDIT_GS_VEICULO
AFTER INSERT OR UPDATE OR DELETE ON GS_VEICULO
FOR EACH ROW
DECLARE
    v_operacao VARCHAR2(10);
    v_dados_antes CLOB;
    v_dados_depois CLOB;
BEGIN
    IF INSERTING THEN
        v_operacao := 'INSERT';
        v_dados_depois := JSON_OBJECT('VEICULO_ID' VALUE :NEW.VEICULO_ID, 'USUARIO_ID' VALUE :NEW.USUARIO_ID, 
                                      'MARCA' VALUE :NEW.MARCA, 'MODELO' VALUE :NEW.MODELO, 
                                      'ANO' VALUE :NEW.ANO, 'AUTONOMIA' VALUE :NEW.AUTONOMIA, 
                                      'TIPO_CONECTOR' VALUE :NEW.TIPO_CONECTOR);
    ELSIF UPDATING THEN
        v_operacao := 'UPDATE';
        v_dados_antes := JSON_OBJECT('VEICULO_ID' VALUE :OLD.VEICULO_ID, 'USUARIO_ID' VALUE :OLD.USUARIO_ID, 
                                     'MARCA' VALUE :OLD.MARCA, 'MODELO' VALUE :OLD.MODELO, 
                                     'ANO' VALUE :OLD.ANO, 'AUTONOMIA' VALUE :OLD.AUTONOMIA, 
                                     'TIPO_CONECTOR' VALUE :OLD.TIPO_CONECTOR);
        v_dados_depois := JSON_OBJECT('VEICULO_ID' VALUE :NEW.VEICULO_ID, 'USUARIO_ID' VALUE :NEW.USUARIO_ID, 
                                      'MARCA' VALUE :NEW.MARCA, 'MODELO' VALUE :NEW.MODELO, 
                                      'ANO' VALUE :NEW.ANO, 'AUTONOMIA' VALUE :NEW.AUTONOMIA, 
                                      'TIPO_CONECTOR' VALUE :NEW.TIPO_CONECTOR);
    ELSIF DELETING THEN
        v_operacao := 'DELETE';
        v_dados_antes := JSON_OBJECT('VEICULO_ID' VALUE :OLD.VEICULO_ID, 'USUARIO_ID' VALUE :OLD.USUARIO_ID, 
                                     'MARCA' VALUE :OLD.MARCA, 'MODELO' VALUE :OLD.MODELO, 
                                     'ANO' VALUE :OLD.ANO, 'AUTONOMIA' VALUE :OLD.AUTONOMIA, 
                                     'TIPO_CONECTOR' VALUE :OLD.TIPO_CONECTOR);
    END IF;

    INSERT INTO GS_AUDITORIA_TRANSACOES (ID, TABELA, OPERACAO, DADOS_ANTES, DADOS_DEPOIS)
    VALUES (GS_AUDITORIA_TRANSACOES_SEQ.NEXTVAL, 'GS_VEICULO', v_operacao, v_dados_antes, v_dados_depois);
END;
/

CREATE OR REPLACE TRIGGER AUDIT_GS_POSTO_CARREGAMENTO
AFTER INSERT OR UPDATE OR DELETE ON GS_POSTO_CARREGAMENTO
FOR EACH ROW
DECLARE
    v_operacao VARCHAR2(10);
    v_dados_antes CLOB;
    v_dados_depois CLOB;
BEGIN
    IF INSERTING THEN
        v_operacao := 'INSERT';
        v_dados_depois := JSON_OBJECT('POSTO_ID' VALUE :NEW.POSTO_ID, 'NOME' VALUE :NEW.NOME, 
                                      'LATITUDE' VALUE :NEW.LATITUDE, 'LONGITUDE' VALUE :NEW.LONGITUDE, 
                                      'ENDERECO' VALUE :NEW.ENDERECO, 'HORARIO_FUNCIONAMENTO' VALUE :NEW.HORARIO_FUNCIONAMENTO, 
                                      'FORMAS_PAGAMENTO' VALUE :NEW.FORMAS_PAGAMENTO, 'AVALIACAO_MEDIA' VALUE :NEW.AVALIACAO_MEDIA);
    ELSIF UPDATING THEN
        v_operacao := 'UPDATE';
        v_dados_antes := JSON_OBJECT('POSTO_ID' VALUE :OLD.POSTO_ID, 'NOME' VALUE :OLD.NOME, 
                                     'LATITUDE' VALUE :OLD.LATITUDE, 'LONGITUDE' VALUE :OLD.LONGITUDE, 
                                     'ENDERECO' VALUE :OLD.ENDERECO, 'HORARIO_FUNCIONAMENTO' VALUE :OLD.HORARIO_FUNCIONAMENTO, 
                                     'FORMAS_PAGAMENTO' VALUE :OLD.FORMAS_PAGAMENTO, 'AVALIACAO_MEDIA' VALUE :OLD.AVALIACAO_MEDIA);
        v_dados_depois := JSON_OBJECT('POSTO_ID' VALUE :NEW.POSTO_ID, 'NOME' VALUE :NEW.NOME, 
                                      'LATITUDE' VALUE :NEW.LATITUDE, 'LONGITUDE' VALUE :NEW.LONGITUDE, 
                                      'ENDERECO' VALUE :NEW.ENDERECO, 'HORARIO_FUNCIONAMENTO' VALUE :NEW.HORARIO_FUNCIONAMENTO, 
                                      'FORMAS_PAGAMENTO' VALUE :NEW.FORMAS_PAGAMENTO, 'AVALIACAO_MEDIA' VALUE :NEW.AVALIACAO_MEDIA);
    ELSIF DELETING THEN
        v_operacao := 'DELETE';
        v_dados_antes := JSON_OBJECT('POSTO_ID' VALUE :OLD.POSTO_ID, 'NOME' VALUE :OLD.NOME, 
                                     'LATITUDE' VALUE :OLD.LATITUDE, 'LONGITUDE' VALUE :OLD.LONGITUDE, 
                                     'ENDERECO' VALUE :OLD.ENDERECO, 'HORARIO_FUNCIONAMENTO' VALUE :OLD.HORARIO_FUNCIONAMENTO, 
                                     'FORMAS_PAGAMENTO' VALUE :OLD.FORMAS_PAGAMENTO, 'AVALIACAO_MEDIA' VALUE :OLD.AVALIACAO_MEDIA);
    END IF;

    INSERT INTO GS_AUDITORIA_TRANSACOES (ID, TABELA, OPERACAO, DADOS_ANTES, DADOS_DEPOIS)
    VALUES (GS_AUDITORIA_TRANSACOES_SEQ.NEXTVAL, 'GS_POSTO_CARREGAMENTO', v_operacao, v_dados_antes, v_dados_depois);
END;
/

CREATE OR REPLACE TRIGGER AUDIT_GS_PONTO_CARREGAMENTO
AFTER INSERT OR UPDATE OR DELETE ON GS_PONTO_CARREGAMENTO
FOR EACH ROW
DECLARE
    v_operacao VARCHAR2(10);
    v_dados_antes CLOB;
    v_dados_depois CLOB;
BEGIN
    IF INSERTING THEN
        v_operacao := 'INSERT';
        v_dados_depois := JSON_OBJECT('PONTO_ID' VALUE :NEW.PONTO_ID, 'POSTO_ID' VALUE :NEW.POSTO_ID, 
                                      'TIPO_CONECTOR' VALUE :NEW.TIPO_CONECTOR, 'VELOCIDADE_CARREGAMENTO' VALUE :NEW.VELOCIDADE_CARREGAMENTO, 
                                      'DISPONIBILIDADE' VALUE :NEW.DISPONIBILIDADE, 'RESERVAVEL' VALUE :NEW.RESERVAVEL);
    ELSIF UPDATING THEN
        v_operacao := 'UPDATE';
        v_dados_antes := JSON_OBJECT('PONTO_ID' VALUE :OLD.PONTO_ID, 'POSTO_ID' VALUE :OLD.POSTO_ID, 
                                     'TIPO_CONECTOR' VALUE :OLD.TIPO_CONECTOR, 'VELOCIDADE_CARREGAMENTO' VALUE :OLD.VELOCIDADE_CARREGAMENTO, 
                                     'DISPONIBILIDADE' VALUE :OLD.DISPONIBILIDADE, 'RESERVAVEL' VALUE :OLD.RESERVAVEL);
        v_dados_depois := JSON_OBJECT('PONTO_ID' VALUE :NEW.PONTO_ID, 'POSTO_ID' VALUE :NEW.POSTO_ID, 
                                      'TIPO_CONECTOR' VALUE :NEW.TIPO_CONECTOR, 'VELOCIDADE_CARREGAMENTO' VALUE :NEW.VELOCIDADE_CARREGAMENTO, 
                                      'DISPONIBILIDADE' VALUE :NEW.DISPONIBILIDADE, 'RESERVAVEL' VALUE :NEW.RESERVAVEL);
    ELSIF DELETING THEN
        v_operacao := 'DELETE';
        v_dados_antes := JSON_OBJECT('PONTO_ID' VALUE :OLD.PONTO_ID, 'POSTO_ID' VALUE :OLD.POSTO_ID, 
                                     'TIPO_CONECTOR' VALUE :OLD.TIPO_CONECTOR, 'VELOCIDADE_CARREGAMENTO' VALUE :OLD.VELOCIDADE_CARREGAMENTO, 
                                     'DISPONIBILIDADE' VALUE :OLD.DISPONIBILIDADE, 'RESERVAVEL' VALUE :OLD.RESERVAVEL);
    END IF;

    INSERT INTO GS_AUDITORIA_TRANSACOES (ID, TABELA, OPERACAO, DADOS_ANTES, DADOS_DEPOIS)
    VALUES (GS_AUDITORIA_TRANSACOES_SEQ.NEXTVAL, 'GS_PONTO_CARREGAMENTO', v_operacao, v_dados_antes, v_dados_depois);
END;
/

CREATE OR REPLACE TRIGGER AUDIT_GS_RESERVA
AFTER INSERT OR UPDATE OR DELETE ON GS_RESERVA
FOR EACH ROW
DECLARE
    v_operacao VARCHAR2(10);
    v_dados_antes CLOB;
    v_dados_depois CLOB;
BEGIN
    IF INSERTING THEN
        v_operacao := 'INSERT';
        v_dados_depois := JSON_OBJECT('RESERVA_ID' VALUE :NEW.RESERVA_ID, 'USUARIO_ID' VALUE :NEW.USUARIO_ID, 
                                      'PONTO_ID' VALUE :NEW.PONTO_ID, 'DATA_RESERVA' VALUE :NEW.DATA_RESERVA, 
                                      'STATUS' VALUE :NEW.STATUS);
    ELSIF UPDATING THEN
        v_operacao := 'UPDATE';
        v_dados_antes := JSON_OBJECT('RESERVA_ID' VALUE :OLD.RESERVA_ID, 'USUARIO_ID' VALUE :OLD.USUARIO_ID, 
                                     'PONTO_ID' VALUE :OLD.PONTO_ID, 'DATA_RESERVA' VALUE :OLD.DATA_RESERVA, 
                                     'STATUS' VALUE :OLD.STATUS);
        v_dados_depois := JSON_OBJECT('RESERVA_ID' VALUE :NEW.RESERVA_ID, 'USUARIO_ID' VALUE :NEW.USUARIO_ID, 
                                      'PONTO_ID' VALUE :NEW.PONTO_ID, 'DATA_RESERVA' VALUE :NEW.DATA_RESERVA, 
                                      'STATUS' VALUE :NEW.STATUS);
    ELSIF DELETING THEN
        v_operacao := 'DELETE';
        v_dados_antes := JSON_OBJECT('RESERVA_ID' VALUE :OLD.RESERVA_ID, 'USUARIO_ID' VALUE :OLD.USUARIO_ID, 
                                     'PONTO_ID' VALUE :OLD.PONTO_ID, 'DATA_RESERVA' VALUE :OLD.DATA_RESERVA, 
                                     'STATUS' VALUE :OLD.STATUS);
    END IF;

    INSERT INTO GS_AUDITORIA_TRANSACOES (ID, TABELA, OPERACAO, DADOS_ANTES, DADOS_DEPOIS)
    VALUES (GS_AUDITORIA_TRANSACOES_SEQ.NEXTVAL, 'GS_RESERVA', v_operacao, v_dados_antes, v_dados_depois);
END;
/

CREATE OR REPLACE TRIGGER AUDIT_GS_HISTORICO_CARREGAMENTO
AFTER INSERT OR UPDATE OR DELETE ON GS_HISTORICO_CARREGAMENTO
FOR EACH ROW
DECLARE
    v_operacao VARCHAR2(10);
    v_dados_antes CLOB;
    v_dados_depois CLOB;
BEGIN
    IF INSERTING THEN
        v_operacao := 'INSERT';
        v_dados_depois := JSON_OBJECT('HISTORICO_ID' VALUE :NEW.HISTORICO_ID, 'USUARIO_ID' VALUE :NEW.USUARIO_ID, 
                                      'PONTO_ID' VALUE :NEW.PONTO_ID, 'DATA_CARREGAMENTO' VALUE :NEW.DATA_CARREGAMENTO, 
                                      'ENERGIA_CONSUMIDA' VALUE :NEW.ENERGIA_CONSUMIDA, 'EMISSOES_EVITAS' VALUE :NEW.EMISSOES_EVITAS);
    ELSIF UPDATING THEN
        v_operacao := 'UPDATE';
        v_dados_antes := JSON_OBJECT('HISTORICO_ID' VALUE :OLD.HISTORICO_ID, 'USUARIO_ID' VALUE :OLD.USUARIO_ID, 
                                     'PONTO_ID' VALUE :OLD.PONTO_ID, 'DATA_CARREGAMENTO' VALUE :OLD.DATA_CARREGAMENTO, 
                                     'ENERGIA_CONSUMIDA' VALUE :OLD.ENERGIA_CONSUMIDA, 'EMISSOES_EVITAS' VALUE :OLD.EMISSOES_EVITAS);
        v_dados_depois := JSON_OBJECT('HISTORICO_ID' VALUE :NEW.HISTORICO_ID, 'USUARIO_ID' VALUE :NEW.USUARIO_ID, 
                                      'PONTO_ID' VALUE :NEW.PONTO_ID, 'DATA_CARREGAMENTO' VALUE :NEW.DATA_CARREGAMENTO, 
                                      'ENERGIA_CONSUMIDA' VALUE :NEW.ENERGIA_CONSUMIDA, 'EMISSOES_EVITAS' VALUE :NEW.EMISSOES_EVITAS);
    ELSIF DELETING THEN
        v_operacao := 'DELETE';
        v_dados_antes := JSON_OBJECT('HISTORICO_ID' VALUE :OLD.HISTORICO_ID, 'USUARIO_ID' VALUE :OLD.USUARIO_ID, 
                                     'PONTO_ID' VALUE :OLD.PONTO_ID, 'DATA_CARREGAMENTO' VALUE :OLD.DATA_CARREGAMENTO, 
                                     'ENERGIA_CONSUMIDA' VALUE :OLD.ENERGIA_CONSUMIDA, 'EMISSOES_EVITAS' VALUE :OLD.EMISSOES_EVITAS);
    END IF;

    INSERT INTO GS_AUDITORIA_TRANSACOES (ID, TABELA, OPERACAO, DADOS_ANTES, DADOS_DEPOIS)
    VALUES (GS_AUDITORIA_TRANSACOES_SEQ.NEXTVAL, 'GS_HISTORICO_CARREGAMENTO', v_operacao, v_dados_antes, v_dados_depois);
END;
/

CREATE OR REPLACE TRIGGER AUDIT_GS_AVALIACAO
AFTER INSERT OR UPDATE OR DELETE ON GS_AVALIACAO
FOR EACH ROW
DECLARE
    v_operacao VARCHAR2(10);
    v_dados_antes CLOB;
    v_dados_depois CLOB;
BEGIN
    IF INSERTING THEN
        v_operacao := 'INSERT';
        v_dados_depois := JSON_OBJECT('AVALIACAO_ID' VALUE :NEW.AVALIACAO_ID, 'USUARIO_ID' VALUE :NEW.USUARIO_ID, 
                                      'POSTO_ID' VALUE :NEW.POSTO_ID, 'NOTA' VALUE :NEW.NOTA, 
                                      'COMENTARIO' VALUE :NEW.COMENTARIO, 'DATA_AVALIACAO' VALUE :NEW.DATA_AVALIACAO);
    ELSIF UPDATING THEN
        v_operacao := 'UPDATE';
        v_dados_antes := JSON_OBJECT('AVALIACAO_ID' VALUE :OLD.AVALIACAO_ID, 'USUARIO_ID' VALUE :OLD.USUARIO_ID, 
                                     'POSTO_ID' VALUE :OLD.POSTO_ID, 'NOTA' VALUE :OLD.NOTA, 
                                     'COMENTARIO' VALUE :OLD.COMENTARIO, 'DATA_AVALIACAO' VALUE :OLD.DATA_AVALIACAO);
        v_dados_depois := JSON_OBJECT('AVALIACAO_ID' VALUE :NEW.AVALIACAO_ID, 'USUARIO_ID' VALUE :NEW.USUARIO_ID, 
                                      'POSTO_ID' VALUE :NEW.POSTO_ID, 'NOTA' VALUE :NEW.NOTA, 
                                      'COMENTARIO' VALUE :NEW.COMENTARIO, 'DATA_AVALIACAO' VALUE :NEW.DATA_AVALIACAO);
    ELSIF DELETING THEN
        v_operacao := 'DELETE';
        v_dados_antes := JSON_OBJECT('AVALIACAO_ID' VALUE :OLD.AVALIACAO_ID, 'USUARIO_ID' VALUE :OLD.USUARIO_ID, 
                                     'POSTO_ID' VALUE :OLD.POSTO_ID, 'NOTA' VALUE :OLD.NOTA, 
                                     'COMENTARIO' VALUE :OLD.COMENTARIO, 'DATA_AVALIACAO' VALUE :OLD.DATA_AVALIACAO);
    END IF;

    INSERT INTO GS_AUDITORIA_TRANSACOES (ID, TABELA, OPERACAO, DADOS_ANTES, DADOS_DEPOIS)
    VALUES (GS_AUDITORIA_TRANSACOES_SEQ.NEXTVAL, 'GS_AVALIACAO', v_operacao, v_dados_antes, v_dados_depois);
END;
/

CREATE OR REPLACE TRIGGER AUDIT_GS_VIAGEM
AFTER INSERT OR UPDATE OR DELETE ON GS_VIAGEM
FOR EACH ROW
DECLARE
    v_operacao VARCHAR2(10);
    v_dados_antes CLOB;
    v_dados_depois CLOB;
BEGIN
    IF INSERTING THEN
        v_operacao := 'INSERT';
        v_dados_depois := JSON_OBJECT('VIAGEM_ID' VALUE :NEW.VIAGEM_ID, 'USUARIO_ID' VALUE :NEW.USUARIO_ID, 
                                      'ORIGEM' VALUE :NEW.ORIGEM, 'DESTINO' VALUE :NEW.DESTINO, 
                                      'AUTONOMIA_RESTANTE' VALUE :NEW.AUTONOMIA_RESTANTE, 'DATA_CRIACAO' VALUE :NEW.DATA_CRIACAO);
    ELSIF UPDATING THEN
        v_operacao := 'UPDATE';
        v_dados_antes := JSON_OBJECT('VIAGEM_ID' VALUE :OLD.VIAGEM_ID, 'USUARIO_ID' VALUE :OLD.USUARIO_ID, 
                                     'ORIGEM' VALUE :OLD.ORIGEM, 'DESTINO' VALUE :OLD.DESTINO, 
                                     'AUTONOMIA_RESTANTE' VALUE :OLD.AUTONOMIA_RESTANTE, 'DATA_CRIACAO' VALUE :OLD.DATA_CRIACAO);
        v_dados_depois := JSON_OBJECT('VIAGEM_ID' VALUE :NEW.VIAGEM_ID, 'USUARIO_ID' VALUE :NEW.USUARIO_ID, 
                                      'ORIGEM' VALUE :NEW.ORIGEM, 'DESTINO' VALUE :NEW.DESTINO, 
                                      'AUTONOMIA_RESTANTE' VALUE :NEW.AUTONOMIA_RESTANTE, 'DATA_CRIACAO' VALUE :NEW.DATA_CRIACAO);
    ELSIF DELETING THEN
        v_operacao := 'DELETE';
        v_dados_antes := JSON_OBJECT('VIAGEM_ID' VALUE :OLD.VIAGEM_ID, 'USUARIO_ID' VALUE :OLD.USUARIO_ID, 
                                     'ORIGEM' VALUE :OLD.ORIGEM, 'DESTINO' VALUE :OLD.DESTINO, 
                                     'AUTONOMIA_RESTANTE' VALUE :OLD.AUTONOMIA_RESTANTE, 'DATA_CRIACAO' VALUE :OLD.DATA_CRIACAO);
    END IF;

    INSERT INTO GS_AUDITORIA_TRANSACOES (ID, TABELA, OPERACAO, DADOS_ANTES, DADOS_DEPOIS)
    VALUES (GS_AUDITORIA_TRANSACOES_SEQ.NEXTVAL, 'GS_VIAGEM', v_operacao, v_dados_antes, v_dados_depois);
END;
/

CREATE OR REPLACE TRIGGER AUDIT_GS_PONTO_PARADA
AFTER INSERT OR UPDATE OR DELETE ON GS_PONTO_PARADA
FOR EACH ROW
DECLARE
    v_operacao VARCHAR2(10);
    v_dados_antes CLOB;
    v_dados_depois CLOB;
BEGIN
    IF INSERTING THEN
        v_operacao := 'INSERT';
        v_dados_depois := JSON_OBJECT('PONTO_PARADA_ID' VALUE :NEW.PONTO_PARADA_ID, 'VIAGEM_ID' VALUE :NEW.VIAGEM_ID, 
                                      'PONTO_ID' VALUE :NEW.PONTO_ID, 'ORDEM' VALUE :NEW.ORDEM);
    ELSIF UPDATING THEN
        v_operacao := 'UPDATE';
        v_dados_antes := JSON_OBJECT('PONTO_PARADA_ID' VALUE :OLD.PONTO_PARADA_ID, 'VIAGEM_ID' VALUE :OLD.VIAGEM_ID, 
                                     'PONTO_ID' VALUE :OLD.PONTO_ID, 'ORDEM' VALUE :OLD.ORDEM);
        v_dados_depois := JSON_OBJECT('PONTO_PARADA_ID' VALUE :NEW.PONTO_PARADA_ID, 'VIAGEM_ID' VALUE :NEW.VIAGEM_ID, 
                                      'PONTO_ID' VALUE :NEW.PONTO_ID, 'ORDEM' VALUE :NEW.ORDEM);
    ELSIF DELETING THEN
        v_operacao := 'DELETE';
        v_dados_antes := JSON_OBJECT('PONTO_PARADA_ID' VALUE :OLD.PONTO_PARADA_ID, 'VIAGEM_ID' VALUE :OLD.VIAGEM_ID, 
                                     'PONTO_ID' VALUE :OLD.PONTO_ID, 'ORDEM' VALUE :OLD.ORDEM);
    END IF;

    INSERT INTO GS_AUDITORIA_TRANSACOES (ID, TABELA, OPERACAO, DADOS_ANTES, DADOS_DEPOIS)
    VALUES (GS_AUDITORIA_TRANSACOES_SEQ.NEXTVAL, 'GS_PONTO_PARADA', v_operacao, v_dados_antes, v_dados_depois);
END;
/